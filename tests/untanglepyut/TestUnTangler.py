
from typing import cast

from unittest import TestSuite
from unittest import main as unitTestMain

from codeallybasic.UnitTestBase import UnitTestBase

from pyutmodelv2.PyutInterface import PyutInterface

from ogl.OglInterface2 import OglInterface2

from untanglepyut.Types import Document
from untanglepyut.Types import DocumentTitle
from untanglepyut.Types import Documents
from untanglepyut.Types import UntangledOglLinks

from untanglepyut.UnTangler import UnTangler
from untanglepyut.XmlVersion import XmlVersion

from tests.ProjectTestBase import ProjectTestBase


class TestUnTangler(ProjectTestBase):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 06 June 2024
    """

    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()

    def tearDown(self):
        super().tearDown()

    def testLollipopInterfaceMultiImplementor(self):

        fqFileName: str = UnitTestBase.getFullyQualifiedResourceFileName(package=ProjectTestBase.V11_TEST_FILES_PACKAGE_NAME,
                                                                         fileName='LollipopInterfaceMultiImplementor.xml')
        untangler: UnTangler = UnTangler(xmlVersion=XmlVersion.V11)

        untangler.untangleFile(fqFileName=fqFileName)

        documents: Documents = untangler.documents

        self.assertTrue(len(documents) == 1, 'Should only have a single document')

        document: Document = documents[DocumentTitle('SampleIFace')]

        untangledOglLinks: UntangledOglLinks = document.oglLinks

        self.assertTrue(len(untangledOglLinks) == 2, 'Not enough lollipops')

        interface1: OglInterface2 = cast(OglInterface2, untangledOglLinks[0])
        interface2: OglInterface2 = cast(OglInterface2, untangledOglLinks[1])

        pyutInterface1: PyutInterface = interface1.pyutInterface
        pyutInterface2: PyutInterface = interface2.pyutInterface

        self.assertEqual(pyutInterface1.name, pyutInterface2.name, 'Names should match')
        self.assertEqual(pyutInterface1.id,   pyutInterface2.id,   'IDs should match')


def suite() -> TestSuite:
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestUnTangler))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
