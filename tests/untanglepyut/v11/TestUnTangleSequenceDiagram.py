from unittest import TestSuite
from unittest import main as unitTestMain

from untangle import Element
from untangle import parse

from tests.ProjectTestBase import TestBase

from ogl.sd.OglSDInstance import OglSDInstance
from ogl.sd.OglSDMessage import OglSDMessage

from untanglepyut.Types import OglSDInstances

from untanglepyut.Types import OglSDMessages

from untanglepyut.XmlVersion import XmlVersion

from untanglepyut.UnTangleSequenceDiagram import UnTangleSequenceDiagram


V11_SEQUENCE_DIAGRAM_DOCUMENT: str = """
<PyutDocument type="SEQUENCE_DIAGRAM" title="SequenceDiagram" scrollPositionX="0" scrollPositionY="0" pixelsPerUnitX="20" pixelsPerUnitY="20">
    <OglSDInstance width="100" height="400" x="129" y="50">
        <PyutSDInstance id="1" instanceName="hasiiInstance" lifeLineLength="200" />
    </OglSDInstance>
    <OglSDInstance width="100" height="400" x="418" y="50">
        <PyutSDInstance id="2" instanceName="franInstance" lifeLineLength="200" />
    </OglSDInstance>
    <OglSDInstance width="100" height="400" x="803" y="50">
        <PyutSDInstance id="3" instanceName="OzzeeInstance" lifeLineLength="200" />
    </OglSDInstance>
    <OglSDMessage>
        <PyutSDMessage id="4" message="calls()" sourceTime="148" destinationTime="150" sourceId="1" destinationId="2" />
    </OglSDMessage>
    <OglSDMessage>
        <PyutSDMessage id="5" message="spanks()" sourceTime="201" destinationTime="194" sourceId="2" destinationId="3" />
    </OglSDMessage>
    <OglSDMessage>
        <PyutSDMessage id="6" message="bites()" sourceTime="328" destinationTime="338" sourceId="3" destinationId="2" />
    </OglSDMessage>
</PyutDocument>
"""


class TestUnTangleSequenceDiagram(TestBase):
    """
    Auto generated by the one and only:
        Gato Malo - Humberto A. Sanchez II
        Generated:  05 September 2023
    """
    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()

    def tearDown(self):
        super().tearDown()

    def testOglSdMessage(self):
        unTangleSequenceDiagram: UnTangleSequenceDiagram = self._untangleSequenceDiagramDocument()

        oglSDMessages: OglSDMessages = unTangleSequenceDiagram.oglSDMessages

        self.assertEqual(3, len(oglSDMessages), 'Invalid message count')

        oglSDMessage: OglSDMessage = oglSDMessages[6]

        self.assertEqual('bites()', oglSDMessage.pyutSDMessage.message, "Missing bites message")
        self.assertEqual(328, oglSDMessage.pyutSDMessage.sourceY,       "Missing bites message")
        self.assertEqual(338, oglSDMessage.pyutSDMessage.destinationY,  "Missing bites message")

    def testOglSdInstance(self):
        unTangleSequenceDiagram: UnTangleSequenceDiagram = self._untangleSequenceDiagramDocument()

        oglSDInstances: OglSDInstances = unTangleSequenceDiagram.oglSDInstances

        self.assertEqual(3, len(oglSDInstances), 'Invalid instance count')

        oglSDInstance: OglSDInstance = oglSDInstances[3]

        self.assertEqual('OzzeeInstance', oglSDInstance.pyutObject.instanceName, 'Incorrect instance name')
        self.assertEqual(200, oglSDInstance.pyutObject.instanceLifeLineLength,           '')

    def _untangleSequenceDiagramDocument(self) -> UnTangleSequenceDiagram:

        root:            Element = parse(V11_SEQUENCE_DIAGRAM_DOCUMENT)
        useCaseDocument: Element = root.PyutDocument

        unTangleSequenceDiagram: UnTangleSequenceDiagram = UnTangleSequenceDiagram(xmlVersion=XmlVersion.V11)

        unTangleSequenceDiagram.unTangle(pyutDocument=useCaseDocument)

        return unTangleSequenceDiagram


def suite() -> TestSuite:
    """You need to change the name of the test class here also."""
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestUnTangleSequenceDiagram))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
